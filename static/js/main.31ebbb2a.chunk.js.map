{"version":3,"sources":["Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","role","aria-label","Text","Message","text","color","style","prototype","PropTypes","string","isRequired","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","length","substring","prototypes","number","String","HomePresenter","nowPlaying","upcoming","popular","error","loading","Loader","map","movie","key","original_title","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","TVApi","topRated","get","airingToday","showDetail","append_to_response","search","term","query","encodeURIComponent","moviesApi","movieDetail","HomeContainer","state","data","results","this","setState","console","log","React","Component","TVPresenter","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","e","preventDefault","searchByTerm","target","a","Backdrop","bgImg","Content","Cover","Data","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","match","push","history","isMoive","includes","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31ebbb2a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  z-index: 10;\r\n  padding: 0 10px;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  background: rgba(20, 20, 20, 0.8);\r\n  color: white;\r\n  box-shadow: 0 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  text-align: center;\r\n  border-bottom: 3px solid\r\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <Container>\r\n      <Title>{title}</Title>\r\n      <Grid>{children}</Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"loading\">\r\n      ⏰\r\n    </span>\r\n  </Container>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span``;\r\n\r\nconst Message = ({ text, color }) => {\r\n  return (\r\n    <Container>\r\n      <Text style={{ color }}>{text}</Text>\r\n    </Container>\r\n  );\r\n};\r\n\r\nMessage.prototype = {\r\n  text: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background: url(${props => `https://image.tmdb.org/t/p/w300${props.bgUrl}`});\r\n  background-size: cover;\r\n  border-radius: 3px;\r\n  background-position: center center;\r\n  height: 180px;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => {\r\n  return (\r\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n      <Container>\r\n        <ImageContainer>\r\n          <Image bgUrl={imageUrl} />\r\n          <Rating>\r\n            <span role=\"img\" aria-label=\"rating\">\r\n              ⭐\r\n            </span>{\" \"}\r\n            {rating}/10\r\n          </Rating>\r\n        </ImageContainer>\r\n        <Title>\r\n          {title.length > 15 ? `${title.substring(0, 15)}...` : title}\r\n        </Title>\r\n        <Year>{year}</Year>\r\n      </Container>\r\n    </Link>\r\n  );\r\n};\r\n\r\nPoster.prototypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.String\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Moives | Nomflix</title>\r\n      </Helmet>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Container>\r\n          {nowPlaying && nowPlaying.length > 0 && (\r\n            <Section title=\"Now Playing\">\r\n              {nowPlaying.map(movie => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  title={movie.original_title}\r\n                  imageUrl={movie.poster_path}\r\n                  rating={movie.vote_average}\r\n                  isMovie={true}\r\n                  year={\r\n                    movie.release_date && movie.release_date.substring(0, 4)\r\n                  }\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {upcoming && upcoming.length > 0 && (\r\n            <Section title=\"Upcoming Moives\">\r\n              {upcoming.map(movie => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  title={movie.original_title}\r\n                  imageUrl={movie.poster_path}\r\n                  rating={movie.vote_average}\r\n                  isMovie={true}\r\n                  year={\r\n                    movie.release_date && movie.release_date.substring(0, 4)\r\n                  }\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {popular && popular.length > 0 && (\r\n            <Section title=\"Popular Moives\">\r\n              {popular.map(movie => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  title={movie.original_title}\r\n                  imageUrl={movie.poster_path}\r\n                  rating={movie.vote_average}\r\n                  isMovie={true}\r\n                  year={\r\n                    movie.release_date && movie.release_date.substring(0, 4)\r\n                  }\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {error && <Message text={error} />}\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"e61361e9cb8702242babb904fc22ed2c\",\r\n    language: \"en-US\"\r\n  }\r\n});\r\n\r\nexport const TVApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: id =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: term =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: id =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: term =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};\r\n","import HomeContainer from \"./HomeContainer\";\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying }\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming }\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: { results: popular }\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"Can't find movies information.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    console.log(this.state);\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>TV Shows | Nomflix</title>\r\n      </Helmet>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Container>\r\n          {topRated && topRated.length > 0 && (\r\n            <Section title=\"Top Rated Shows\">\r\n              {topRated.map(show => (\r\n                <Poster\r\n                  key={show.id}\r\n                  id={show.id}\r\n                  title={show.original_name}\r\n                  imageUrl={show.poster_path}\r\n                  rating={show.vote_average}\r\n                  year={\r\n                    show.first_air_date && show.first_air_date.substring(0, 4)\r\n                  }\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {popular && popular.length > 0 && (\r\n            <Section title=\"Popular Shows\">\r\n              {popular.map(show => (\r\n                <Poster\r\n                  key={show.id}\r\n                  id={show.id}\r\n                  title={show.original_name}\r\n                  imageUrl={show.poster_path}\r\n                  rating={show.vote_average}\r\n                  year={\r\n                    show.first_air_date && show.first_air_date.substring(0, 4)\r\n                  }\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {airingToday && airingToday.length > 0 && (\r\n            <Section title=\"Airing Today\">\r\n              {airingToday.map(show => (\r\n                <Poster\r\n                  key={show.id}\r\n                  id={show.id}\r\n                  title={show.original_name}\r\n                  imageUrl={show.poster_path}\r\n                  rating={show.vote_average}\r\n                  year={\r\n                    show.first_air_date && show.first_air_date.substring(0, 4)\r\n                  }\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {error && <Message text={error} />}\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { TVApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    error: null,\r\n    loading: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated }\r\n      } = await TVApi.topRated();\r\n      const {\r\n        data: { results: popular }\r\n      } = await TVApi.popular();\r\n      const {\r\n        data: { results: airingToday }\r\n      } = await TVApi.airingToday();\r\n      this.setState({ topRated, popular, airingToday });\r\n    } catch {\r\n      this.setState({ error: \"Can't find TV information.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, error, loading } = this.state;\r\n    console.log(this.state);\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Section from \"../../Components/Section\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  searchTerm,\r\n  error,\r\n  loading,\r\n  handleSubmit,\r\n  updateTerm\r\n}) => {\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Search | Nomflix</title>\r\n      </Helmet>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input\r\n          placeholder=\"Search Moives or TV Shows...\"\r\n          value={searchTerm}\r\n          onChange={updateTerm}\r\n        />\r\n      </Form>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          {movieResults && movieResults.length > 0 && (\r\n            <Section title=\"Movie Results\">\r\n              {movieResults.map(movie => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  title={movie.original_title}\r\n                  imageUrl={movie.poster_path}\r\n                  rating={movie.vote_average}\r\n                  isMovie={true}\r\n                  year={\r\n                    movie.release_date && movie.release_date.substring(0, 4)\r\n                  }\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {tvResults && tvResults.length > 0 && (\r\n            <Section title=\"TV Show Results\">\r\n              {tvResults.map(show => (\r\n                <Poster\r\n                  key={show.id}\r\n                  id={show.id}\r\n                  title={show.original_name}\r\n                  imageUrl={show.poster_path}\r\n                  rating={show.vote_average}\r\n                  year={\r\n                    show.first_air_date && show.first_air_date.substring(0, 4)\r\n                  }\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n        </>\r\n      )}\r\n      {error && <Message color=\"#e74c3c\" text={error} />}\r\n      {tvResults &&\r\n        movieResults &&\r\n        tvResults.length === 0 &&\r\n        movieResults.length === 0 && (\r\n          <Message color=\"#95a5a6\" text={`Nothing found for: ${searchTerm}`} />\r\n        )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, TVApi } from \"api\";\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    error: null,\r\n    loading: false\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = ({ target: { value } }) => {\r\n    this.setState({\r\n      searchTerm: value\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults }\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults }\r\n      } = await TVApi.search(searchTerm);\r\n      this.setState({ movieResults, tvResults });\r\n    } catch {\r\n      this.setState({ error: \"Can't find results\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        error={error}\r\n        loading={loading}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../Components/Loader\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 15px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: url(${props => props.bgImg});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n  background: url(${props => props.bgImg});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 32px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) => {\r\n  return loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Nomflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n          | Nomflix\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImg={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImg={`https://image.tmdb.org/t/p/original${result.poster_path}`}\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>·</Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n            </Item>\r\n            <Divider>·</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, TVApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    result: null,\r\n    error: null,\r\n    loading: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      },\r\n      history: { push },\r\n      location: { pathname }\r\n    } = this.props;\r\n    this.isMoive = pathname.includes(\"/movie/\");\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) return push(\"/\");\r\n    let result = null;\r\n    try {\r\n      if (this.isMoive)\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      else ({ data: result } = await TVApi.showDetail(parsedId));\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n      console.log(result);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport Header from \"Components/Header\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\nexport default () => (\r\n  // 두 개의 Route가 같이 Render되는 것을 막기 위해\r\n  // Switch를 사용\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/show/:id\" component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    @import url('https://fonts.googleapis.com/css?family=Noto+Sans+KR&display=swap');\r\n    \r\n    ${reset};\r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n    a {\r\n        text-decoration: none;\r\n        color: inherit;\r\n    }\r\n    body {\r\n        padding-top: 50px;\r\n        background: rgba(20, 20, 20, 1);\r\n        font-family: 'Noto Sans KR', sans-serif;\r\n        font-size: 1rem;\r\n        color: white;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}